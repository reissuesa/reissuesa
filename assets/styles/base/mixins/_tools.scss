/* ==========================================================================
 # Tool mixins
========================================================================== */

// aspect ratio
@mixin aspect-ratio($width, $height) {
  padding-bottom: percentage($height / $width);
}

// unified transition for theme
@mixin transition($property:all) {
  transition: $property .2s ease-in-out;
}

// fix WP admin bar height on sticky menu
@mixin admin-bar-sticky-fix {
  .admin-bar & {
    top: 46px;
    @media screen and (min-width: 783px) {
      top: 32px;
    }
  }
}

// show text to screen readers only
@mixin visuallyhidden {
  border: 0;
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  word-wrap: normal;
}

// fix float overflow
@mixin clearfix {
  &:after {
    content: '';
    display: table;
    clear: both;
  }
}

// ---------------------------------------------------------
//
// From Air-Light base/helpers.scss
//
// ---------------------------------------------------------

// CSS Grid mixin with flexbox fallback for IE and Edge
@mixin grid($columns, $fr: 1, $min_height: 100px, $max_height: auto, $gutter_x: 40px, $gutter_y: 16px) {
  display: grid;
  grid-template-columns: repeat($columns, #{$fr}fr);
  // grid-auto-rows: minmax($min_height, $max_height);
  grid-auto-rows: 1fr;
  grid-column-gap: $gutter_x;
  grid-row-gap: $gutter_y;

  // For browser versions that do not support CSS grid
  @supports not (display: grid) {
    display: flex;
    flex-wrap: wrap;
    overflow: hidden;

    > div {
      $grid_width: 100% / $columns;
      width: calc(#{$grid_width} - #{$gutter_x});
      margin-right: $gutter_x;
      margin-bottom: $gutter_y;

      &:nth-child(#{$columns}n+#{$columns}) {
        margin-right: 0;
      }
    }
  }

  // Internet Explorer
  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
    display: flex;
    flex-wrap: wrap;
    overflow: hidden;

    > div {
      $grid_width: 100% / $columns;
      width: calc(#{$grid_width} - #{$gutter_x});
      margin-right: $gutter_x;
      margin-bottom: $gutter_y;

      &:nth-child(#{$columns}n+#{$columns}) {
        margin-right: 0;
      }
    }
  }

  // Edge
  @supports (-ms-ime-align: auto) {
    display: flex;
    flex-wrap: wrap;
    overflow: hidden;

    > div {
      $grid_width: 100% / $columns;
      width: calc(#{$grid_width} - #{$gutter_x});
      margin-right: calc($gutter_x + .5rem);
      padding-right: 1.5rem;
      margin-bottom: $gutter_y;

      &:nth-child(#{$columns}n+#{$columns}) {
        margin-right: 0;
      }
    }
  }
}



div.sticky {
  position: -webkit-sticky; /* Safari */
  position: sticky;
  top: 0;
}
